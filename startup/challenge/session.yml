name: icuas_ch
root: ./
startup_window: roscore
pre_window: export UAV_NAMESPACE=red
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
        - export SITL_RITW_TERMINAL="tmux new-window -d -n:ardupilot1"; waitForRos; 
          roslaunch ardupilot_gazebo sim_vehicle.launch 
          enable_console:=false
          additional_arguments:="--no-rebuild"
        - waitForRos; rosparam set use_sim_time true; roslaunch ardupilot_gazebo mavros.launch
        - waitForRos; rosrun icuas22_competition spawn_ball_at_uav.py __ns:=$UAV_NAMESPACE
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch ardupilot_gazebo kopterworx.launch 
          use_sim_time:=true
          enable_magnet:=true
          x:=-10
          world:=$(rospack find icuas22_competition)/worlds/well_lit.world
        - waitForRos; waitForSimulation; roslaunch larics_gazebo_worlds spawn_arena_v1.launch
        - waitForRos; waitForSimulation; roslaunch larics_gazebo_worlds spawn_alvar_tile.launch 
          x:=12.5 yaw:=3.1415926 z:=2 y:=-3
  - arm&takeof:
      layout: tiled
      panes:
        - waitForRos; roslaunch uav_ros_control pid_carrot.launch 
          manual_takeoff:=false
          default_params:=custom_config/position_control_custom.yaml
        - |
          rosrun ardupilot_gazebo automatic_takeoff.sh
          sleep 10
          rosservice call /$UAV_NAMESPACE/spawn_ball
          rostopic pub --latch std_msgs/Bool /$UAV_NAMESPACE/challenge_started True
  - trajectory:
      layout: tiled
      panes:
        - waitForRos; waitForOdometry; roslaunch uav_ros_tracker topp_tracker.launch 
          tracker_config:=custom_config/topp_config_custom.yaml
  - solution:
      layout: tiled
      panes:
        - # Launch your Challenge solution here
